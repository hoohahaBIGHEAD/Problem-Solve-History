성적처리 앱(APP) 개발

개요) 정규분포를 갖는 랜덤한 성적을 발생시키고 이를 정렬하여 해당 교과목의 학점부여 원칙에 따라 학점을 결정하고 출력하는 앱(APP)을 개발함. (개설교과목 2개 (교과목 A와 교과목 B, 각 수강학생 50명(학번 01, 02,.....으로 구분) 50인 모두는 2개의 교과목 수강함을 가정함) 공개된 소스코드(DLS with Iterators)를 활용하여 수강자가 교과목 추가수강을 하더라도 타 개발자가 위의 개발된 프로그램을 이용하여 타 기능을 추가할 경우에 대비하여 손쉽게  확장할 수 있는 상황을 고려하여 APP을 개발함.

세부사항) 1. 수강학생의 숫자는 50인으로 하며 평균 70, 표준편차 20인 정규분포를 갖는데, 100점만점으로 합산한 교과목 점수를 발생시킨다. 이 총점은 근사적으로 발생시킨 것이므로 정규분포에서 다소 벗어나더라도 문제가 없음. 다만 균일한 분포가 되지 않고 정규분포에 근접한 점수를 생성하여야 함. (난수발생기 활용)

2. 각 학생은 두 개의 교과목을 수강하고 있으며, 사용자가 원하는 결과를 메뉴에서 번호를 선택하면 해당하는 결과를 화면에 출력하고, 메뉴를 선택하는 화면을 출력하여 메뉴입력 대기상태로 돌아가야 함. (주의 : 자신에게 부여된 정렬 알고리즘을 메뉴에 출력; ex, 선택정렬기반)

ex) 출력 메뉴 : 1. 과목별 수강학생+총점 출력(1-1:학번순, 1-2:성적순), 2.  과목별 수강학생+최종학점 출력(학번순), 3.  전체 수강교과목에 대한 성적출력 (학번순), 4. 프로그램 종료, 기타 메뉴 구성

3. 정렬 알고리즘은 첨부의 삽입(insertion), 선택(selection), 버블(풍선껌) 정렬 알고리즘 중 하나를 다음의 기준으로 선택함. 수강학생 자신의 학번의 마지막 자리를 정수 3으로 나누어 나머지가 0이면 삽입, 1이면 선택, 2이면 버블 정렬 알고리즘을 각각 채택하여 구현하여야 함. 첨부자료(Sorting algorithm1.pdf)의 해당 정렬 알고리즘을 이해하고 반드시 Iterator를 활용하여 해당 알고리즘을 구현하여야함.

4. 학점 기준 : 1. 상위 35%에 A학점 부여(해당 학점 중 A+, A0, A-를 각각  1/3씩 부여. 소수점이하 반올림) 2. 중위 40% B학점 부여(해당 학점 중 B+, B0, B-를 각각  1/3씩 부여. 소수점이하 반올림) 3. 하위 25% C학점 부여해당 학점 중 C+,C0, C-를 각각  1/3씩 부여. 소수점이하 반올림) 4. D학점이나 Failure가 없음을 가정함.

5. 제출파일 (2개) : 소스 코드(코드 스크립트)+실행파일 ----> 압축(zip)된 1개의 파일로 제출


#### 채점기준  (20점 만점)

--------------

2. 세부사항)2.에서 3번 메뉴의 “전체 수강교과목에 대한 성적출력(학번순)”이라는 것이 각 과목별 성적 출력을 총 2번(과목1, 과목2) 하는건가요, 아니면 만점 100+100=200점인 과목1과 과목2의 총합 점수를 기준으로 성적과 학점을 출력하는 것인가요?

답변 2. 개설된 모든 과목에 대해서 각 학번별 성적(과목1 성적(학점포함), 과목 2성적(학점포함))을 출력해야 합니다.

채점기준을 일부 수정 공지함
#### 채점기준  (20점 만점)

- 감점기준 -

1. 출력메뉴가 적절하게 구성되어 있지 않음(최소 2점)

2. 배정된 정렬 알고리즘을 쓰지 않음(2점)

3.  수강과목의 추가가 용이하지 않게 구성됨 (2점)

4. 메인 함수에 기능블럭별로 단순하게 구성되어 있지 않고 장황함(최소 1점)

5. 실행파일/Source 파일의 미포함 (1점)

6. 제출요청하지 않은 불필요한 파일 포함 (1점)

7. 매우 유사한 코드 스크립트 (소스 코드) 발생(20점)  해당 학생들에게 소명을 요청할 것이면 적절한 소명이 이루어지지 않으면 해당 자가실습은 해당 학생들 모두 0점으로 처리됨을 양지하기 바람(최종학점 산정에서도 불이익을 받을 수 있음)

8. 완성도가 매우 낮은 경우 최하점을 부여 할 수 있음.

주의사항)자가실습 1, 2번의 채점 중에 타 학생의 코드 스크립트의 사용이 의심되는 경우를 발견하였으며 추후 소명을 요청할 예정임. 알고리즘이나 구조에 대해 타 수강학생과 토론할 수는 있으나 모든 코드 스크립트의 작성은 본인이 직접 하여야 함.